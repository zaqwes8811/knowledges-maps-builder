package chew.chew_third_party;

import org.junit.Test;

import com.googlecode.objectify.Key;
import com.googlecode.objectify.Result;

import static com.googlecode.objectify.ObjectifyService;

public class CarTest {
	@Test
	void testCreate() {
		Car porsche = new Car("2FAST", RED);
		ofy().save().entity(porsche).now();    // async without the now()

		assert porsche.id != null;    // id was autogenerated

		// Get it back
		Result<Car> result = ofy().load().key(Key.create(Car.class, porsche.id));  // Result is async
		Car fetched1 = result.now();    // Materialize the async value

		// More likely this is what you will type
		Car fetched2 = ofy().load().type(Car.class).id(porsche.id).now();

		// Or you can issue a query
		Car fetched3 = ofy().load().type(Car.class).filter("license", "2FAST").first().now();

		// Change some data and write it
		porsche.color = BLUE;
		ofy().save().entity(porsche).now();    // async without the now()

		// Delete it
		ofy().delete().entity(porsche).now();    // async without the now()
	}
}
