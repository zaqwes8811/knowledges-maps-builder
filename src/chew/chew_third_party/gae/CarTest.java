// https://groups.google.com/forum/#!topic/objectify-appengine/5I-B2wxog5g
// https://developers.google.com/appengine/docs/java/tools/localunittesting?csw=1#Introducing_the_Java_Testing_Utilities
//
// https://developers.google.com/appengine/docs/java/datastore/index
package chew.chew_third_party.gae;

import com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig;
import com.google.appengine.tools.development.testing.LocalServiceTestHelper;
import com.googlecode.objectify.*;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

//import static com.googlecode.objectify.ObjectifyService;
import static chew.chew_third_party.gae.OfyService.ofy;

public class CarTest {
	private static final LocalServiceTestHelper helper =
	    new LocalServiceTestHelper(new LocalDatastoreServiceTestConfig());
	protected static ObjectifyFactory fact;

	@BeforeClass
	public static void setUp() {
	    helper.setUp();
    /*
	    fact = new ObjectifyFactory() {
	        @Override
	        public Objectify begin(ObjectifyOpts opts)
	        {
	            opts.setSessionCache(false);
	            return super.begin(opts);
	        }
	    };
	    */

	}

	@AfterClass
	public static void tearDown() {
	    helper.tearDown();
	}
	
	@Test
	public void testCreate() {
		Objectify ofy = ofy();//ObjectifyService.begin();
		Car porsche = new Car();
    porsche.color = 8;
    porsche.license = "6JHD";
		ofy.save().entity(porsche).now();    // async without the now()

		assert porsche.id != null;    // id was autogenerated


		// Get it back
		Ref<Car> result = ofy.load().key(Key.create(Car.class, porsche.id));  // Result is async
		Car fetched1 = result.now();    // Materialize the async value

    /*
		// More likely this is what you will type
		Car fetched2 = ofy().load().type(Car.class).id(porsche.id).now();

		// Or you can issue a query
		Car fetched3 = ofy().load().type(Car.class).filter("license", "2FAST").first().now();

		// Change some data and write it
		porsche.color = BLUE;
		ofy().save().entity(porsche).now();    // async without the now()

		// Delete it
		ofy().delete().entity(porsche).now();    // async without the now()
		*/
	}
}
